// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// match_arg_index
IntegerVector match_arg_index(CharacterVector arg, CharacterVector choices);
RcppExport SEXP _strex_match_arg_index(SEXP argSEXP, SEXP choicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type arg(argSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type choices(choicesSEXP);
    rcpp_result_gen = Rcpp::wrap(match_arg_index(arg, choices));
    return rcpp_result_gen;
END_RCPP
}
// interleave_strings
CharacterVector interleave_strings(CharacterVector strings1, CharacterVector strings2);
RcppExport SEXP _strex_interleave_strings(SEXP strings1SEXP, SEXP strings2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type strings1(strings1SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type strings2(strings2SEXP);
    rcpp_result_gen = Rcpp::wrap(interleave_strings(strings1, strings2));
    return rcpp_result_gen;
END_RCPP
}
// interleave_char_lists
List interleave_char_lists(List strings1, List strings2);
RcppExport SEXP _strex_interleave_char_lists(SEXP strings1SEXP, SEXP strings2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type strings1(strings1SEXP);
    Rcpp::traits::input_parameter< List >::type strings2(strings2SEXP);
    rcpp_result_gen = Rcpp::wrap(interleave_char_lists(strings1, strings2));
    return rcpp_result_gen;
END_RCPP
}
// lst_char_to_num
List lst_char_to_num(List x, bool commas);
RcppExport SEXP _strex_lst_char_to_num(SEXP xSEXP, SEXP commasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type commas(commasSEXP);
    rcpp_result_gen = Rcpp::wrap(lst_char_to_num(x, commas));
    return rcpp_result_gen;
END_RCPP
}
// str_list_remove_empties
List str_list_remove_empties(List char_list);
RcppExport SEXP _strex_str_list_remove_empties(SEXP char_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type char_list(char_listSEXP);
    rcpp_result_gen = Rcpp::wrap(str_list_remove_empties(char_list));
    return rcpp_result_gen;
END_RCPP
}
// str_list_nth_elems_helper
CharacterVector str_list_nth_elems_helper(List char_list, IntegerVector n);
RcppExport SEXP _strex_str_list_nth_elems_helper(SEXP char_listSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type char_list(char_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(str_list_nth_elems_helper(char_list, n));
    return rcpp_result_gen;
END_RCPP
}
// num_list_nth_elems_
NumericVector num_list_nth_elems_(List num_list, IntegerVector n);
RcppExport SEXP _strex_num_list_nth_elems_(SEXP num_listSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type num_list(num_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(num_list_nth_elems_(num_list, n));
    return rcpp_result_gen;
END_RCPP
}
// int_lst_first_col
List int_lst_first_col(List x);
RcppExport SEXP _strex_int_lst_first_col(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(int_lst_first_col(x));
    return rcpp_result_gen;
END_RCPP
}
// lst_rbind
IntegerMatrix lst_rbind(List x, NumericVector x_lens);
RcppExport SEXP _strex_lst_rbind(SEXP xSEXP, SEXP x_lensSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_lens(x_lensSEXP);
    rcpp_result_gen = Rcpp::wrap(lst_rbind(x, x_lens));
    return rcpp_result_gen;
END_RCPP
}
// lst_rbind_nth_rows
IntegerMatrix lst_rbind_nth_rows(List x, NumericVector n);
RcppExport SEXP _strex_lst_rbind_nth_rows(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(lst_rbind_nth_rows(x, n));
    return rcpp_result_gen;
END_RCPP
}
// fullocated_substrs
List fullocated_substrs(CharacterVector strings, List locations);
RcppExport SEXP _strex_fullocated_substrs(SEXP stringsSEXP, SEXP locationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type strings(stringsSEXP);
    Rcpp::traits::input_parameter< List >::type locations(locationsSEXP);
    rcpp_result_gen = Rcpp::wrap(fullocated_substrs(strings, locations));
    return rcpp_result_gen;
END_RCPP
}
// char_to_num
NumericVector char_to_num(CharacterVector x, bool commas);
RcppExport SEXP _strex_char_to_num(SEXP xSEXP, SEXP commasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type commas(commasSEXP);
    rcpp_result_gen = Rcpp::wrap(char_to_num(x, commas));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_strex_match_arg_index", (DL_FUNC) &_strex_match_arg_index, 2},
    {"_strex_interleave_strings", (DL_FUNC) &_strex_interleave_strings, 2},
    {"_strex_interleave_char_lists", (DL_FUNC) &_strex_interleave_char_lists, 2},
    {"_strex_lst_char_to_num", (DL_FUNC) &_strex_lst_char_to_num, 2},
    {"_strex_str_list_remove_empties", (DL_FUNC) &_strex_str_list_remove_empties, 1},
    {"_strex_str_list_nth_elems_helper", (DL_FUNC) &_strex_str_list_nth_elems_helper, 2},
    {"_strex_num_list_nth_elems_", (DL_FUNC) &_strex_num_list_nth_elems_, 2},
    {"_strex_int_lst_first_col", (DL_FUNC) &_strex_int_lst_first_col, 1},
    {"_strex_lst_rbind", (DL_FUNC) &_strex_lst_rbind, 2},
    {"_strex_lst_rbind_nth_rows", (DL_FUNC) &_strex_lst_rbind_nth_rows, 2},
    {"_strex_fullocated_substrs", (DL_FUNC) &_strex_fullocated_substrs, 2},
    {"_strex_char_to_num", (DL_FUNC) &_strex_char_to_num, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_strex(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
